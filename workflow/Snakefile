# A Snakemake pipeline for quality control of Illumina next-generation
#                            sequencing data
# *********************************************************************


# dependencies
# *********************************************************************
# configuration file
configfile: "config/config.yaml"

from pathlib import Path


# global wild cards of sample and pairpair list
(SAMPLES,) = glob_wildcards(Path(config["input"]["fastq"], "{sample}_1.fq.gz"))


# all output out
# *********************************************************************
rule all:
    input:
        # multiqc output depends on fastqc output, see multiqc rule
        "output/multiqc_report.html"


# fastqc - check quality of raw fastq-files and merge fastqc reports
# *********************************************************************
rule fastqc:
    input:
        r1 = Path(config["input"]["fastq"], "{sample}_1.fq.gz"),
        r2 = Path(config["input"]["fastq"], "{sample}_2.fq.gz"),
    output:
        r1_html = Path(config["fastqc"]["dir"], "{sample}_1_fastqc.html"),
        r2_html = Path(config["fastqc"]["dir"], "{sample}_2_fastqc.html"),
        r1_zip = Path(config["fastqc"]["dir"], "{sample}_1_fastqc.zip"),
        r2_zip = Path(config["fastqc"]["dir"], "{sample}_2_fastqc.zip"),
    params:
        threads=config["threads"],
        dir=directory(config["fastqc"]["dir"]),
    log:
        Path(config["logdir"], "fastqc", "{sample}.fastqc.log")
    conda:
        "envs/fastqc.yaml"
    shell:
        """
        echo "##############################################"
        echo "------------    Running FastQC    ------------"
        echo "##############################################"

        fastqc {input.r1} {input.r2} \
            --threads {params.threads} \
            --format fastq \
            --quiet \
            --outdir {params.dir} \
            2> {log}
        """


# multiqc - merge fastqc reports
# *********************************************************************
rule multiqc:
    input:
        expand(Path(config["fastqc"]["dir"], "{sample}_1_fastqc.zip"), sample=SAMPLES),
        expand(Path(config["fastqc"]["dir"], "{sample}_2_fastqc.zip"), sample=SAMPLES)
    output:
        "output/multiqc_report.html",
        directory("qc/multiqc_data"),
    params:
        extra = "--data-dir"
    wrapper:
        "v2.10.0/bio/multiqc"
